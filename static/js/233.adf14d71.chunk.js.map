{"version":3,"file":"static/js/233.adf14d71.chunk.js","mappings":"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","sources":["pages/Reset_Password/ResetPassword.jsx","components/FlexContainer/FlexContainer.jsx"],"sourcesContent":["import {\r\n  Box,\r\n  Button,\r\n  Grid,\r\n  Link,\r\n  styled,\r\n  TextField,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport React, { useState } from \"react\";\r\n//   import { setIsAuth } from \"../../reducers/isAuthSlise\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport BG from \"../../Assests/BG.jpg\";\r\n//import Logopng from \"../../Assests/logo-no-background.png\";\r\nimport Logopng from \"../../Assests/maxxieslogos.png\";\r\nimport FlexContainer from \"../../components/FlexContainer/FlexContainer\";\r\n// import { Input as BaseInput } from '@mui/base/Input';\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nconst MainDiv = styled(\"div\")({\r\n  display: \"flex\",\r\n  flexDirection: \"column\",\r\n  alignItems: \"center\",\r\n  justifyContent: \"center\",\r\n  minHeight: \"100vh\",\r\n  minWidth: \"100vw\",\r\n  margin: 0,\r\n  padding: 0,\r\n  backgroundImage: `url(${BG})`,\r\n  backgroundRepeat: \"no-repeat\",\r\n  backgroundSize: \"cover\",\r\n  backgroundPosition: \"center\",\r\n});\r\n\r\nconst LoginDiv = styled(Box)(({ theme }) => ({\r\n  [theme.breakpoints.up(\"xs\")]: {\r\n    width: \"300px\",\r\n  },\r\n  [theme.breakpoints.up(\"sm\")]: {\r\n    width: \"300px\",\r\n  },\r\n  [theme.breakpoints.up(\"md\")]: {\r\n    width: \"350px\",\r\n  },\r\n  [theme.breakpoints.up(\"lg\")]: {\r\n    width: \"350px\",\r\n  },\r\n  borderRadius: \"20px\",\r\n  backgroundColor: \"white\",\r\n  padding: \"20px\",\r\n}));\r\n\r\nfunction ResetPassword() {\r\n  const navigate = useNavigate();\r\n  const [newPassword, setNewPassword] = useState(\"\");\r\n  const [confirmpassword, setConfirmpassword] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const [newPasswordError, setNewPasswordError] = useState(\"\");\r\n  const [confirmpasswordError, setConfirmpasswordError] = useState(\"\");\r\n  const { id, token } = useParams();\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault(); // Prevent page refresh\r\n\r\n    // Basic validation\r\n    if (!newPassword) {\r\n      setNewPasswordError(\"Please enter a new password\");\r\n      return;\r\n    }\r\n\r\n    if (!confirmpassword) {\r\n      setConfirmpasswordError(\"Please confirm your password\");\r\n      return;\r\n    }\r\n\r\n    if (newPassword !== confirmpassword) {\r\n      setConfirmpasswordError(\"Passwords do not match\");\r\n      return;\r\n    }\r\n\r\n    // If all good, proceed to reset\r\n    axios\r\n      .post(`http://localhost:5000/user/reset-password/${id}/${token}`, {\r\n        newPassword,\r\n      })\r\n      .then((response) => {\r\n        if (response.data.status === \"Success\") {\r\n          navigate(\"/\");\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        setError(\"Something went wrong. Please try again.\");\r\n      });\r\n  };\r\n\r\n  return (\r\n    <MainDiv>\r\n      <LoginDiv>\r\n        <Typography\r\n          textAlign={\"center\"}\r\n          color={\"black\"}\r\n          fontSize={\"22px\"}\r\n          fontWeight={600}\r\n        >\r\n          Reset Password\r\n        </Typography>\r\n        <FlexContainer\r\n          sx={{\r\n            justifyContent: \"center\",\r\n            mt: 2,\r\n          }}\r\n        >\r\n          <img src={Logopng} alt=\"logo\" width={\"180px\"} />\r\n        </FlexContainer>\r\n        <form onSubmit={handleSubmit}>\r\n          <Box mt={3}>\r\n            <TextField\r\n              label=\"New Paasword\"\r\n              fullWidth\r\n              variant=\"outlined\"\r\n              size=\"small\"\r\n              type=\"password\"\r\n\r\n              error={!!newPasswordError}\r\n              helperText={newPasswordError}\r\n              onChange={(event) => {\r\n                setNewPassword(event.target.value);\r\n                setNewPasswordError(\"\");\r\n              }}\r\n            />\r\n          </Box>\r\n          <Box mt={2}>\r\n            <TextField\r\n              label=\"Confirm Password\"\r\n              fullWidth\r\n              variant=\"outlined\"\r\n              type=\"password\"\r\n              // error={!!errors.password}\r\n              // {...register(\"password\", { required: true })}\r\n              size=\"small\"\r\n              error={!!confirmpasswordError} // Show error style if error exists\r\n              helperText={confirmpasswordError} // Show error message\r\n              onChange={(event) => {\r\n                setConfirmpassword(event.target.value);\r\n                setConfirmpasswordError(\"\"); \r\n              }}\r\n              \r\n            />\r\n          </Box>\r\n          <Button\r\n            fullWidth\r\n            sx={{ mt: 2, backgroundColor: \"#2168BA\", color: \"white\" }}\r\n            variant=\"contained\"\r\n            type=\"submit\"\r\n          >\r\n            Reset Password\r\n          </Button>\r\n        </form>\r\n      </LoginDiv>\r\n    </MainDiv>\r\n  );\r\n}\r\nexport default ResetPassword;\r\n","import { Box } from \"@mui/material\";\r\nimport propTypes from \"prop-types\";\r\n\r\n/**\r\n * Readymade FlexContainer component.\r\n * Use sx prop to add or override styles.\r\n * By default it has display: flex, alignItems: center, justifyContent: center\r\n *\r\n */\r\nconst FlexContainer = ({ sx, children, onClick= ()=> {} }) => {\r\n  return (\r\n    <Box\r\n    onClick={onClick}\r\n      sx={{\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        ...sx,\r\n      }}\r\n    >\r\n      {children}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default FlexContainer;\r\n\r\nFlexContainer.propTypes = {\r\n  sx: propTypes.object,\r\n  children: propTypes.node,\r\n};"],"names":["MainDiv","styled","display","flexDirection","alignItems","justifyContent","minHeight","minWidth","margin","padding","backgroundImage","BG","backgroundRepeat","backgroundSize","backgroundPosition","LoginDiv","Box","_ref","theme","breakpoints","up","width","borderRadius","backgroundColor","navigate","useNavigate","newPassword","setNewPassword","useState","confirmpassword","setConfirmpassword","error","setError","newPasswordError","setNewPasswordError","confirmpasswordError","setConfirmpasswordError","id","token","useParams","_jsx","children","_jsxs","Typography","textAlign","color","fontSize","fontWeight","FlexContainer","sx","mt","src","Logopng","alt","onSubmit","e","preventDefault","axios","post","then","response","data","status","catch","console","log","TextField","label","fullWidth","variant","size","type","helperText","onChange","event","target","value","Button","onClick"],"sourceRoot":""}