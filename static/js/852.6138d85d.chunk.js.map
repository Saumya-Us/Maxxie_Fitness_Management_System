{"version":3,"file":"static/js/852.6138d85d.chunk.js","mappings":"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","sources":["pages/Profile/profile.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  Typography,\r\n  TextField,\r\n  Paper,\r\n  Drawer,\r\n  IconButton,\r\n  Container,\r\n  useMediaQuery,\r\n} from \"@mui/material\";\r\nimport MenuIcon from \"@mui/icons-material/Menu\";\r\nimport ArrowBackIcon from \"@mui/icons-material/ArrowBack\";\r\nimport CloseIcon from \"@mui/icons-material/Close\";\r\nimport { Icon } from \"@iconify/react\";\r\nimport { useTheme } from \"@mui/material/styles\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { jwtDecode } from \"jwt-decode\";\r\nimport BG from \"../../Assests/BG2.jpg\";\r\nimport Logopng from \"../../Assests/maxxieslogos.png\";\r\n\r\n// Sidebar buttons, matching your main theme\r\nconst sidebarButtons = [\r\n  { text: \"Home\", icon: <Icon icon=\"codicon:home\" fontSize={28} />, route: \"/home\", color: \"primary\" },\r\n  { text: \"Session\", icon: <Icon icon=\"codicon:edit-session\" fontSize={28} />, route: \"/session-home\", color: \"primary\" },\r\n  { text: \"Store\", icon: <Icon icon=\"mdi:cart\" fontSize={28} />, route: \"/user-store\", color: \"primary\" },\r\n  { text: \"Workout Plans\", icon: <Icon icon=\"mdi:cart\" fontSize={28} />, route: \"/workout-plans-user\", color: \"primary\" },\r\n  { text: \"Diet Plan\", icon: <Icon icon=\"uis:schedule\" fontSize={28} />, route: \"/diet-plan-user\", color: \"warning\" },\r\n  { text: \"Membership Plan\", icon: <Icon icon=\"codicon:edit-session\" fontSize={28} />, route: \"/membership-plans-user\", color: \"primary\" },\r\n];\r\n\r\nconst Profile = () => {\r\n  const [user, setUser] = useState(null);\r\n  const [editMode, setEditMode] = useState(false);\r\n  const [updatedUser, setUpdatedUser] = useState({\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    weight: \"\",\r\n  });\r\n  const [userId, setUserId] = useState(null);\r\n  const [deleteRequested, setDeleteRequested] = useState(false);\r\n  const [drawerOpen, setDrawerOpen] = useState(false);\r\n\r\n  const navigate = useNavigate();\r\n  const theme = useTheme();\r\n  const isMobile = useMediaQuery(theme.breakpoints.down(\"sm\"));\r\n\r\n  // Fetch user details from token\r\n  useEffect(() => {\r\n    const token = localStorage.getItem(\"accessToken\");\r\n    if (!token) {\r\n      console.error(\"No token found\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const decodedToken = jwtDecode(token);\r\n      const id = decodedToken.id;\r\n      setUserId(id);\r\n\r\n      axios\r\n        .get(`http://localhost:5000/user/${id}`)\r\n        .then((response) => {\r\n          setUser(response.data);\r\n          setDeleteRequested(response.data.deleteRequest);\r\n          setUpdatedUser({\r\n            firstName: response.data.firstName || \"\",\r\n            lastName: response.data.lastName || \"\",\r\n            email: response.data.email || \"\",\r\n            phone: response.data.phone || \"\",\r\n            weight: response.data.weight || \"\",\r\n          });\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"Error fetching user:\", error);\r\n        });\r\n    } catch (error) {\r\n      console.error(\"Error decoding token:\", error);\r\n    }\r\n  }, []);\r\n\r\n  // Update user details\r\n  const handleUpdate = async () => {\r\n    if (!userId) return;\r\n\r\n    try {\r\n      const response = await axios.put(\r\n        `http://localhost:5000/user/${userId}`,\r\n        updatedUser\r\n      );\r\n      setUser(response.data);\r\n      setEditMode(false);\r\n    } catch (error) {\r\n      console.error(\"Error updating user:\", error);\r\n    }\r\n  };\r\n\r\n  // Delete user account\r\n  const handleDeleteRequest = async () => {\r\n    if (!userId) return;\r\n\r\n    try {\r\n      await axios.put(`http://localhost:5000/user/request-delete/${userId}`);\r\n      setDeleteRequested(true);\r\n      alert(\"Delete request sent to admin.\");\r\n    } catch (error) {\r\n      console.error(\"Error requesting account deletion:\", error);\r\n    }\r\n  };\r\n\r\n  // Sidebar content\r\n  const SidebarContent = (\r\n    <Box\r\n      component=\"aside\"\r\n      sx={{\r\n        width: { xs: 250, sm: 320 },\r\n        minHeight: \"100vh\",\r\n        backgroundImage: `url(${BG})`,\r\n        backgroundColor: \"rgba(34, 69, 98, 0.92)\",\r\n        backgroundSize: \"cover\",\r\n        backgroundPosition: \"center\",\r\n        backgroundRepeat: \"no-repeat\",\r\n        color: \"#fff\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n        py: 4,\r\n        boxShadow: 4,\r\n      }}\r\n    >\r\n      <Box sx={{ mb: 3 }}>\r\n        <img src={Logopng} alt=\"Logo\" style={{ width: 120, borderRadius: 12, marginTop: 80 }} />\r\n      </Box>\r\n      <Typography\r\n        variant=\"h5\"\r\n        sx={{\r\n          fontWeight: \"bold\",\r\n          letterSpacing: 2,\r\n          mb: 4,\r\n          color: \"#fff\",\r\n          textShadow: \"0 2px 8px rgba(0,0,0,0.25)\",\r\n        }}\r\n      >\r\n        Maxxies\r\n      </Typography>\r\n      <Box sx={{ width: \"90%\" }}>\r\n        {sidebarButtons.map((btn) => (\r\n          <Button\r\n            key={btn.text}\r\n            variant=\"contained\"\r\n            color={btn.color}\r\n            fullWidth\r\n            startIcon={btn.icon}\r\n            sx={{\r\n              mb: 2,\r\n              minHeight: 56,\r\n              borderRadius: 3,\r\n              fontWeight: \"bold\",\r\n              fontSize: 17,\r\n              justifyContent: \"flex-start\",\r\n              boxShadow: \"0 2px 12px 0 rgba(0,0,0,0.08)\",\r\n              backgroundColor: \"rgba(255, 255, 255, 0.4)\",\r\n              color: \"#fff\",\r\n              \"&:hover\": {\r\n                backgroundColor: \"rgba(255,255,255,0.18)\",\r\n                color: \"#fff\",\r\n                boxShadow: \"0 4px 16px 0 rgba(0,0,0,0.12)\",\r\n              },\r\n            }}\r\n            onClick={() => {\r\n              navigate(btn.route);\r\n              if (isMobile) setDrawerOpen(false);\r\n            }}\r\n          >\r\n            {btn.text}\r\n          </Button>\r\n        ))}\r\n      </Box>\r\n    </Box>\r\n  );\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        minHeight: \"100vh\",\r\n        minWidth: \"100vw\",\r\n        m: 0,\r\n        p: 0,\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n        backgroundImage: `url(${BG})`,\r\n        backgroundSize: \"cover\",\r\n        backgroundPosition: \"center\",\r\n        backgroundRepeat: \"no-repeat\",\r\n        overflow: \"hidden\",\r\n      }}\r\n    >\r\n      {/* Sidebar: Drawer for mobile, fixed for desktop */}\r\n      {isMobile ? (\r\n        <>\r\n          <IconButton\r\n            onClick={() => setDrawerOpen(true)}\r\n            sx={{\r\n              position: \"absolute\",\r\n              top: 18,\r\n              left: 18,\r\n              zIndex: 1301,\r\n              bgcolor: \"rgba(34,69,98,0.92)\",\r\n              color: \"#fff\",\r\n              boxShadow: 2,\r\n              \"&:hover\": {\r\n                bgcolor: \"rgba(34,69,98,1)\",\r\n              },\r\n            }}\r\n          >\r\n            <MenuIcon fontSize=\"large\" />\r\n          </IconButton>\r\n          <Drawer\r\n            anchor=\"left\"\r\n            open={drawerOpen}\r\n            onClose={() => setDrawerOpen(false)}\r\n            PaperProps={{\r\n              sx: {\r\n                backgroundImage: `url(${BG})`,\r\n                backgroundColor: \"rgba(1, 21, 37, 0.92)\",\r\n                backgroundSize: \"cover\",\r\n                backgroundPosition: \"center\",\r\n                color: \"#fff\",\r\n              },\r\n            }}\r\n          >\r\n            <Box sx={{ display: \"flex\", justifyContent: \"flex-end\", p: 1 }}>\r\n              <IconButton onClick={() => setDrawerOpen(false)} sx={{ color: \"#fff\" }}>\r\n                <CloseIcon />\r\n              </IconButton>\r\n            </Box>\r\n            {SidebarContent}\r\n          </Drawer>\r\n        </>\r\n      ) : (\r\n        SidebarContent\r\n      )}\r\n\r\n      {/* Main Content */}\r\n      <Box\r\n        sx={{\r\n          flex: 1,\r\n          minHeight: \"100vh\",\r\n          display: \"flex\",\r\n          alignItems: \"flex-start\",\r\n          justifyContent: \"center\",\r\n          px: { xs: 1, sm: 6 },\r\n          py: 6,\r\n        }}\r\n      >\r\n        <Paper\r\n          elevation={10}\r\n          sx={{\r\n            width: \"100%\",\r\n            maxWidth: \"100%\",\r\n            bgcolor: \"rgba(255,255,255,0.85)\",\r\n            borderRadius: 5,\r\n            boxShadow: 10,\r\n            p: { xs: 2, sm: 5 },\r\n            mt: { xs: 2, sm: 0 },\r\n          }}\r\n        >\r\n          <Box\r\n            sx={{\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"space-between\",\r\n              mb: 3,\r\n            }}\r\n          >\r\n            <Button\r\n              startIcon={<ArrowBackIcon />}\r\n              variant=\"outlined\"\r\n              color=\"primary\"\r\n              onClick={() => navigate(-1)}\r\n              sx={{\r\n                borderRadius: 2,\r\n                fontWeight: \"bold\",\r\n                px: 2,\r\n                bgcolor: \"rgba(34,69,98,0.08)\",\r\n                \"&:hover\": { bgcolor: \"rgba(34,69,98,0.18)\" },\r\n              }}\r\n            >\r\n              Back\r\n            </Button>\r\n            <Typography\r\n              variant=\"h5\"\r\n              sx={{\r\n                fontWeight: \"bold\",\r\n                color: \"#224562\",\r\n                letterSpacing: 1,\r\n                textShadow: \"0 2px 8px rgba(0,0,0,0.10)\",\r\n              }}\r\n            >\r\n              Profile\r\n            </Typography>\r\n          </Box>\r\n\r\n          <Box sx={{ display: 'flex', gap: 2, mb: 3 }}>\r\n            <Button variant=\"contained\" color=\"primary\" onClick={() => userId ? navigate('/payment-history', { state: { userId } }) : alert('User ID not found.')}>\r\n              View Payment History\r\n            </Button>\r\n            <Button variant=\"contained\" color=\"primary\" onClick={() => navigate('/paymentpage')}>\r\n              Make a Payment\r\n            </Button>\r\n          </Box>\r\n\r\n          {editMode ? (\r\n            <>\r\n              <TextField\r\n                label=\"First Name\"\r\n                fullWidth\r\n                margin=\"normal\"\r\n                value={updatedUser.firstName}\r\n                onChange={(e) =>\r\n                  setUpdatedUser({\r\n                    ...updatedUser,\r\n                    firstName: e.target.value,\r\n                  })\r\n                }\r\n                sx={{\r\n                  bgcolor: \"#f5f8ff\",\r\n                  borderRadius: 2,\r\n                  mb: 2,\r\n                }}\r\n              />\r\n              <TextField\r\n                label=\"Last Name\"\r\n                fullWidth\r\n                margin=\"normal\"\r\n                value={updatedUser.lastName}\r\n                onChange={(e) =>\r\n                  setUpdatedUser({ ...updatedUser, lastName: e.target.value })\r\n                }\r\n                sx={{\r\n                  bgcolor: \"#f5f8ff\",\r\n                  borderRadius: 2,\r\n                  mb: 2,\r\n                }}\r\n              />\r\n              <TextField\r\n                label=\"Email\"\r\n                fullWidth\r\n                margin=\"normal\"\r\n                value={updatedUser.email}\r\n                onChange={(e) =>\r\n                  setUpdatedUser({ ...updatedUser, email: e.target.value })\r\n                }\r\n                sx={{\r\n                  bgcolor: \"#f5f8ff\",\r\n                  borderRadius: 2,\r\n                  mb: 2,\r\n                }}\r\n              />\r\n              <TextField\r\n                label=\"Phone Number\"\r\n                fullWidth\r\n                margin=\"normal\"\r\n                value={updatedUser.phone}\r\n                onChange={(e) =>\r\n                  setUpdatedUser({ ...updatedUser, phone: e.target.value })\r\n                }\r\n                sx={{\r\n                  bgcolor: \"#f5f8ff\",\r\n                  borderRadius: 2,\r\n                  mb: 2,\r\n                }}\r\n              />\r\n              <TextField\r\n                label=\"Weight\"\r\n                fullWidth\r\n                margin=\"normal\"\r\n                value={updatedUser.weight}\r\n                onChange={(e) =>\r\n                  setUpdatedUser({ ...updatedUser, weight: e.target.value })\r\n                }\r\n                sx={{\r\n                  bgcolor: \"#f5f8ff\",\r\n                  borderRadius: 2,\r\n                  mb: 2,\r\n                }}\r\n              />\r\n              <Box mt={2} display=\"flex\" gap={2}>\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  onClick={handleUpdate}\r\n                  sx={{\r\n                    fontWeight: \"bold\",\r\n                    borderRadius: 2,\r\n                    px: 4,\r\n                    boxShadow: \"0 2px 8px 0 rgba(34,69,98,0.09)\",\r\n                  }}\r\n                >\r\n                  Save\r\n                </Button>\r\n                <Button\r\n                  variant=\"outlined\"\r\n                  color=\"secondary\"\r\n                  onClick={() => setEditMode(false)}\r\n                  sx={{\r\n                    fontWeight: \"bold\",\r\n                    borderRadius: 2,\r\n                    px: 4,\r\n                  }}\r\n                >\r\n                  Cancel\r\n                </Button>\r\n              </Box>\r\n            </>\r\n          ) : (\r\n            user && (\r\n              <>\r\n                <Typography variant=\"body1\" sx={{ mb: 1 }}>\r\n                  <strong>Name:</strong> {user.firstName} {user.lastName}\r\n                </Typography>\r\n                <Typography variant=\"body1\" sx={{ mb: 1 }}>\r\n                  <strong>Email:</strong> {user.email}\r\n                </Typography>\r\n                <Typography variant=\"body1\" sx={{ mb: 1 }}>\r\n                  <strong>Phone number:</strong> {user.phone}\r\n                </Typography>\r\n                <Typography variant=\"body1\" sx={{ mb: 1 }}>\r\n                  <strong>Height:</strong> {user.height}\r\n                </Typography>\r\n                <Typography variant=\"body1\" sx={{ mb: 1 }}>\r\n                  <strong>Weight:</strong> {user.weight}\r\n                </Typography>\r\n                <Typography variant=\"body1\" sx={{ mb: 1 }}>\r\n  <strong>Membership Plan:</strong>{\" \"}\r\n  {user.selectedPlanName ? user.selectedPlanName : \"No Plan Selected\"}\r\n</Typography>\r\n\r\n\r\n\r\n\r\n                <Box mt={2} display=\"flex\" gap={2}>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={() => setEditMode(true)}\r\n                    sx={{\r\n                      fontWeight: \"bold\",\r\n                      borderRadius: 2,\r\n                      px: 4,\r\n                      boxShadow: \"0 2px 8px 0 rgba(34,69,98,0.09)\",\r\n                    }}\r\n                  >\r\n                    Edit Profile\r\n                  </Button>\r\n                  {deleteRequested ? (\r\n                    <Button variant=\"contained\" disabled sx={{\r\n                      fontWeight: \"bold\",\r\n                      borderRadius: 2,\r\n                      px: 4,\r\n                    }}>\r\n                      Requested\r\n                    </Button>\r\n                  ) : (\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      color=\"error\"\r\n                      onClick={handleDeleteRequest}\r\n                      sx={{\r\n                        fontWeight: \"bold\",\r\n                        borderRadius: 2,\r\n                        px: 4,\r\n                      }}\r\n                    >\r\n                      Delete Account\r\n                    </Button>\r\n                  )}\r\n                </Box>\r\n              </>\r\n            )\r\n          )}\r\n        </Paper>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n"],"names":["sidebarButtons","text","icon","_jsx","Icon","fontSize","route","color","Profile","user","setUser","useState","editMode","setEditMode","updatedUser","setUpdatedUser","firstName","lastName","email","phone","weight","userId","setUserId","deleteRequested","setDeleteRequested","drawerOpen","setDrawerOpen","navigate","useNavigate","theme","useTheme","isMobile","useMediaQuery","breakpoints","down","useEffect","token","localStorage","getItem","id","jwtDecode","axios","get","then","response","data","deleteRequest","catch","error","console","SidebarContent","_jsxs","Box","component","sx","width","xs","sm","minHeight","backgroundImage","BG","backgroundColor","backgroundSize","backgroundPosition","backgroundRepeat","display","flexDirection","alignItems","py","boxShadow","children","mb","src","Logopng","alt","style","borderRadius","marginTop","Typography","variant","fontWeight","letterSpacing","textShadow","map","btn","Button","fullWidth","startIcon","justifyContent","onClick","minWidth","m","p","overflow","_Fragment","IconButton","position","top","left","zIndex","bgcolor","MenuIcon","Drawer","anchor","open","onClose","PaperProps","CloseIcon","flex","px","Paper","elevation","maxWidth","mt","ArrowBackIcon","gap","state","alert","TextField","label","margin","value","onChange","e","target","async","put","height","selectedPlanName","disabled"],"sourceRoot":""}